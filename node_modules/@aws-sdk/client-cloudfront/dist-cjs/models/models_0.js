"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidRequiredProtocol = exports.InvalidRelativePath = exports.InvalidQueryStringParameters = exports.InvalidProtocolSettings = exports.InvalidOriginReadTimeout = exports.InvalidOriginKeepaliveTimeout = exports.InvalidOriginAccessIdentity = exports.InvalidOriginAccessControl = exports.InvalidOrigin = exports.InvalidMinimumProtocolVersion = exports.InvalidLocationCode = exports.InvalidLambdaFunctionAssociation = exports.InvalidIfMatchVersion = exports.InvalidHeadersForS3Origin = exports.InvalidGeoRestrictionParameter = exports.InvalidFunctionAssociation = exports.InvalidForwardCookies = exports.InvalidErrorCode = exports.InvalidDefaultRootObject = exports.InconsistentQuantities = exports.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior = exports.DistributionAlreadyExists = exports.SSLSupportMethod = exports.MinimumProtocolVersion = exports.GeoRestrictionType = exports.PriceClass = exports.SslProtocol = exports.OriginProtocolPolicy = exports.HttpVersion = exports.CNAMEAlreadyExists = exports.CertificateSource = exports.CannotChangeImmutablePublicKeyFields = exports.CachePolicyType = exports.CachePolicyInUse = exports.CachePolicyAlreadyExists = exports.CachePolicyQueryStringBehavior = exports.CachePolicyHeaderBehavior = exports.CachePolicyCookieBehavior = exports.ViewerProtocolPolicy = exports.EventType = exports.ItemSelection = exports.BatchTooLarge = exports.TooManyDistributionCNAMEs = exports.NoSuchDistribution = exports.InvalidArgument = exports.IllegalUpdate = exports.Method = exports.ICPRecordalStatus = exports.AccessDenied = exports.ResponseHeadersPolicyAccessControlAllowMethodsValues = void 0;
exports.FieldLevelEncryptionConfigAlreadyExists = exports.Format = exports.InvalidTagging = exports.TooManyDistributionsAssociatedToOriginAccessControl = exports.InvalidDomainNameForOriginAccessControl = exports.IllegalOriginAccessConfiguration = exports.StagingDistributionInUse = exports.ContinuousDeploymentPolicyType = exports.TooManyCloudFrontOriginAccessIdentities = exports.CloudFrontOriginAccessIdentityAlreadyExists = exports.TooManyQueryStringsInCachePolicy = exports.TooManyHeadersInCachePolicy = exports.TooManyCookiesInCachePolicy = exports.TooManyCachePolicies = exports.TrustedSignerDoesNotExist = exports.TrustedKeyGroupDoesNotExist = exports.TooManyTrustedSigners = exports.TooManyQueryStringParameters = exports.TooManyOrigins = exports.TooManyOriginGroupsPerDistribution = exports.TooManyOriginCustomHeaders = exports.TooManyLambdaFunctionAssociations = exports.TooManyKeyGroupsAssociatedToDistribution = exports.TooManyHeadersInForwardedValues = exports.TooManyFunctionAssociations = exports.TooManyDistributionsWithSingleFunctionARN = exports.TooManyDistributionsWithLambdaAssociations = exports.TooManyDistributionsWithFunctionAssociations = exports.TooManyDistributionsAssociatedToResponseHeadersPolicy = exports.TooManyDistributionsAssociatedToOriginRequestPolicy = exports.TooManyDistributionsAssociatedToKeyGroup = exports.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig = exports.TooManyDistributionsAssociatedToCachePolicy = exports.TooManyDistributions = exports.TooManyCookieNamesInWhiteList = exports.TooManyCertificates = exports.TooManyCacheBehaviors = exports.RealtimeLogConfigOwnerMismatch = exports.PreconditionFailed = exports.NoSuchResponseHeadersPolicy = exports.NoSuchRealtimeLogConfig = exports.NoSuchOriginRequestPolicy = exports.NoSuchOrigin = exports.NoSuchFieldLevelEncryptionConfig = exports.NoSuchCachePolicy = exports.MissingBody = exports.InvalidWebACLId = exports.InvalidViewerCertificate = exports.InvalidTTLOrder = exports.InvalidResponseCode = void 0;
exports.SignerFilterSensitiveLog = exports.ActiveTrustedKeyGroupsFilterSensitiveLog = exports.KGKeyPairIdsFilterSensitiveLog = exports.KeyPairIdsFilterSensitiveLog = exports.TooManyResponseHeadersPolicies = exports.TooManyCustomHeadersInResponseHeadersPolicy = exports.TooLongCSPInResponseHeadersPolicy = exports.ResponseHeadersPolicyAlreadyExists = exports.ReferrerPolicyList = exports.FrameOptionsList = exports.TooManyRealtimeLogConfigs = exports.RealtimeLogConfigAlreadyExists = exports.TooManyPublicKeys = exports.PublicKeyAlreadyExists = exports.TooManyQueryStringsInOriginRequestPolicy = exports.TooManyOriginRequestPolicies = exports.TooManyHeadersInOriginRequestPolicy = exports.TooManyCookiesInOriginRequestPolicy = exports.OriginRequestPolicyAlreadyExists = exports.OriginRequestPolicyQueryStringBehavior = exports.OriginRequestPolicyHeaderBehavior = exports.OriginRequestPolicyCookieBehavior = exports.TooManyOriginAccessControls = exports.OriginAccessControlAlreadyExists = exports.OriginAccessControlSigningProtocols = exports.OriginAccessControlSigningBehaviors = exports.OriginAccessControlOriginTypes = exports.MonitoringSubscriptionAlreadyExists = exports.RealtimeMetricsSubscriptionStatus = exports.TooManyPublicKeysInKeyGroup = exports.TooManyKeyGroups = exports.KeyGroupAlreadyExists = exports.TooManyInvalidationsInProgress = exports.UnsupportedOperation = exports.TooManyFunctions = exports.FunctionSizeLimitExceeded = exports.FunctionAlreadyExists = exports.FunctionStage = exports.FunctionRuntime = exports.TooManyFieldLevelEncryptionProfiles = exports.TooManyFieldLevelEncryptionFieldPatterns = exports.TooManyFieldLevelEncryptionEncryptionEntities = exports.NoSuchPublicKey = exports.FieldLevelEncryptionProfileSizeExceeded = exports.FieldLevelEncryptionProfileAlreadyExists = exports.TooManyFieldLevelEncryptionQueryArgProfiles = exports.TooManyFieldLevelEncryptionContentTypeProfiles = exports.TooManyFieldLevelEncryptionConfigs = exports.QueryArgProfileEmpty = exports.NoSuchFieldLevelEncryptionProfile = void 0;
exports.ViewerCertificateFilterSensitiveLog = exports.RestrictionsFilterSensitiveLog = exports.GeoRestrictionFilterSensitiveLog = exports.OriginsFilterSensitiveLog = exports.OriginFilterSensitiveLog = exports.S3OriginConfigFilterSensitiveLog = exports.OriginShieldFilterSensitiveLog = exports.CustomOriginConfigFilterSensitiveLog = exports.OriginSslProtocolsFilterSensitiveLog = exports.CustomHeadersFilterSensitiveLog = exports.OriginCustomHeaderFilterSensitiveLog = exports.OriginGroupsFilterSensitiveLog = exports.OriginGroupFilterSensitiveLog = exports.OriginGroupMembersFilterSensitiveLog = exports.OriginGroupMemberFilterSensitiveLog = exports.OriginGroupFailoverCriteriaFilterSensitiveLog = exports.StatusCodesFilterSensitiveLog = exports.LoggingConfigFilterSensitiveLog = exports.DefaultCacheBehaviorFilterSensitiveLog = exports.CustomErrorResponsesFilterSensitiveLog = exports.CustomErrorResponseFilterSensitiveLog = exports.CopyDistributionRequestFilterSensitiveLog = exports.CachePolicyListFilterSensitiveLog = exports.CachePolicySummaryFilterSensitiveLog = exports.CachePolicyFilterSensitiveLog = exports.CachePolicyConfigFilterSensitiveLog = exports.ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog = exports.CachePolicyQueryStringsConfigFilterSensitiveLog = exports.QueryStringNamesFilterSensitiveLog = exports.CachePolicyHeadersConfigFilterSensitiveLog = exports.CachePolicyCookiesConfigFilterSensitiveLog = exports.CacheBehaviorsFilterSensitiveLog = exports.CacheBehaviorFilterSensitiveLog = exports.TrustedSignersFilterSensitiveLog = exports.TrustedKeyGroupsFilterSensitiveLog = exports.LambdaFunctionAssociationsFilterSensitiveLog = exports.LambdaFunctionAssociationFilterSensitiveLog = exports.FunctionAssociationsFilterSensitiveLog = exports.FunctionAssociationFilterSensitiveLog = exports.ForwardedValuesFilterSensitiveLog = exports.QueryStringCacheKeysFilterSensitiveLog = exports.HeadersFilterSensitiveLog = exports.CookiePreferenceFilterSensitiveLog = exports.CookieNamesFilterSensitiveLog = exports.AssociateAliasRequestFilterSensitiveLog = exports.AllowedMethodsFilterSensitiveLog = exports.CachedMethodsFilterSensitiveLog = exports.AliasICPRecordalFilterSensitiveLog = exports.AliasesFilterSensitiveLog = exports.ActiveTrustedSignersFilterSensitiveLog = void 0;
exports.CreateInvalidationRequestFilterSensitiveLog = exports.InvalidationBatchFilterSensitiveLog = exports.PathsFilterSensitiveLog = exports.CreateFunctionResultFilterSensitiveLog = exports.FunctionSummaryFilterSensitiveLog = exports.FunctionMetadataFilterSensitiveLog = exports.CreateFunctionRequestFilterSensitiveLog = exports.FunctionConfigFilterSensitiveLog = exports.CreateFieldLevelEncryptionProfileResultFilterSensitiveLog = exports.FieldLevelEncryptionProfileFilterSensitiveLog = exports.CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog = exports.FieldLevelEncryptionProfileConfigFilterSensitiveLog = exports.EncryptionEntitiesFilterSensitiveLog = exports.EncryptionEntityFilterSensitiveLog = exports.FieldPatternsFilterSensitiveLog = exports.CreateFieldLevelEncryptionConfigResultFilterSensitiveLog = exports.FieldLevelEncryptionFilterSensitiveLog = exports.CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog = exports.FieldLevelEncryptionConfigFilterSensitiveLog = exports.QueryArgProfileConfigFilterSensitiveLog = exports.QueryArgProfilesFilterSensitiveLog = exports.QueryArgProfileFilterSensitiveLog = exports.ContentTypeProfileConfigFilterSensitiveLog = exports.ContentTypeProfilesFilterSensitiveLog = exports.ContentTypeProfileFilterSensitiveLog = exports.CreateDistributionWithTagsResultFilterSensitiveLog = exports.CreateDistributionWithTagsRequestFilterSensitiveLog = exports.DistributionConfigWithTagsFilterSensitiveLog = exports.TagsFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.CreateDistributionResultFilterSensitiveLog = exports.CreateDistributionRequestFilterSensitiveLog = exports.CreateContinuousDeploymentPolicyResultFilterSensitiveLog = exports.ContinuousDeploymentPolicyFilterSensitiveLog = exports.CreateContinuousDeploymentPolicyRequestFilterSensitiveLog = exports.ContinuousDeploymentPolicyConfigFilterSensitiveLog = exports.TrafficConfigFilterSensitiveLog = exports.ContinuousDeploymentSingleWeightConfigFilterSensitiveLog = exports.SessionStickinessConfigFilterSensitiveLog = exports.ContinuousDeploymentSingleHeaderConfigFilterSensitiveLog = exports.StagingDistributionDnsNamesFilterSensitiveLog = exports.CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = exports.CloudFrontOriginAccessIdentityFilterSensitiveLog = exports.CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = exports.CloudFrontOriginAccessIdentityConfigFilterSensitiveLog = exports.CreateCachePolicyResultFilterSensitiveLog = exports.CreateCachePolicyRequestFilterSensitiveLog = exports.CopyDistributionResultFilterSensitiveLog = exports.DistributionFilterSensitiveLog = exports.DistributionConfigFilterSensitiveLog = void 0;
exports.StreamingLoggingConfigFilterSensitiveLog = exports.CreateResponseHeadersPolicyResultFilterSensitiveLog = exports.ResponseHeadersPolicyFilterSensitiveLog = exports.CreateResponseHeadersPolicyRequestFilterSensitiveLog = exports.ResponseHeadersPolicyConfigFilterSensitiveLog = exports.ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog = exports.ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog = exports.ResponseHeadersPolicyXSSProtectionFilterSensitiveLog = exports.ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog = exports.ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog = exports.ResponseHeadersPolicyFrameOptionsFilterSensitiveLog = exports.ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog = exports.ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog = exports.ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog = exports.ResponseHeadersPolicyCustomHeaderFilterSensitiveLog = exports.ResponseHeadersPolicyCorsConfigFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog = exports.CreateRealtimeLogConfigResultFilterSensitiveLog = exports.RealtimeLogConfigFilterSensitiveLog = exports.CreateRealtimeLogConfigRequestFilterSensitiveLog = exports.EndPointFilterSensitiveLog = exports.KinesisStreamConfigFilterSensitiveLog = exports.CreatePublicKeyResultFilterSensitiveLog = exports.PublicKeyFilterSensitiveLog = exports.CreatePublicKeyRequestFilterSensitiveLog = exports.PublicKeyConfigFilterSensitiveLog = exports.CreateOriginRequestPolicyResultFilterSensitiveLog = exports.OriginRequestPolicyFilterSensitiveLog = exports.CreateOriginRequestPolicyRequestFilterSensitiveLog = exports.OriginRequestPolicyConfigFilterSensitiveLog = exports.OriginRequestPolicyQueryStringsConfigFilterSensitiveLog = exports.OriginRequestPolicyHeadersConfigFilterSensitiveLog = exports.OriginRequestPolicyCookiesConfigFilterSensitiveLog = exports.CreateOriginAccessControlResultFilterSensitiveLog = exports.OriginAccessControlFilterSensitiveLog = exports.CreateOriginAccessControlRequestFilterSensitiveLog = exports.OriginAccessControlConfigFilterSensitiveLog = exports.CreateMonitoringSubscriptionResultFilterSensitiveLog = exports.CreateMonitoringSubscriptionRequestFilterSensitiveLog = exports.MonitoringSubscriptionFilterSensitiveLog = exports.RealtimeMetricsSubscriptionConfigFilterSensitiveLog = exports.CreateKeyGroupResultFilterSensitiveLog = exports.KeyGroupFilterSensitiveLog = exports.CreateKeyGroupRequestFilterSensitiveLog = exports.KeyGroupConfigFilterSensitiveLog = exports.CreateInvalidationResultFilterSensitiveLog = exports.InvalidationFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const CloudFrontServiceException_1 = require("./CloudFrontServiceException");
var ResponseHeadersPolicyAccessControlAllowMethodsValues;
(function (ResponseHeadersPolicyAccessControlAllowMethodsValues) {
    ResponseHeadersPolicyAccessControlAllowMethodsValues["ALL"] = "ALL";
    ResponseHeadersPolicyAccessControlAllowMethodsValues["DELETE"] = "DELETE";
    ResponseHeadersPolicyAccessControlAllowMethodsValues["GET"] = "GET";
    ResponseHeadersPolicyAccessControlAllowMethodsValues["HEAD"] = "HEAD";
    ResponseHeadersPolicyAccessControlAllowMethodsValues["OPTIONS"] = "OPTIONS";
    ResponseHeadersPolicyAccessControlAllowMethodsValues["PATCH"] = "PATCH";
    ResponseHeadersPolicyAccessControlAllowMethodsValues["POST"] = "POST";
    ResponseHeadersPolicyAccessControlAllowMethodsValues["PUT"] = "PUT";
})(ResponseHeadersPolicyAccessControlAllowMethodsValues = exports.ResponseHeadersPolicyAccessControlAllowMethodsValues || (exports.ResponseHeadersPolicyAccessControlAllowMethodsValues = {}));
class AccessDenied extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "AccessDenied",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDenied";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDenied.prototype);
        this.Message = opts.Message;
    }
}
exports.AccessDenied = AccessDenied;
var ICPRecordalStatus;
(function (ICPRecordalStatus) {
    ICPRecordalStatus["APPROVED"] = "APPROVED";
    ICPRecordalStatus["PENDING"] = "PENDING";
    ICPRecordalStatus["SUSPENDED"] = "SUSPENDED";
})(ICPRecordalStatus = exports.ICPRecordalStatus || (exports.ICPRecordalStatus = {}));
var Method;
(function (Method) {
    Method["DELETE"] = "DELETE";
    Method["GET"] = "GET";
    Method["HEAD"] = "HEAD";
    Method["OPTIONS"] = "OPTIONS";
    Method["PATCH"] = "PATCH";
    Method["POST"] = "POST";
    Method["PUT"] = "PUT";
})(Method = exports.Method || (exports.Method = {}));
class IllegalUpdate extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "IllegalUpdate",
            $fault: "client",
            ...opts,
        });
        this.name = "IllegalUpdate";
        this.$fault = "client";
        Object.setPrototypeOf(this, IllegalUpdate.prototype);
        this.Message = opts.Message;
    }
}
exports.IllegalUpdate = IllegalUpdate;
class InvalidArgument extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidArgument",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArgument";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArgument.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidArgument = InvalidArgument;
class NoSuchDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchDistribution",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchDistribution";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchDistribution.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchDistribution = NoSuchDistribution;
class TooManyDistributionCNAMEs extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionCNAMEs",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionCNAMEs";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionCNAMEs.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionCNAMEs = TooManyDistributionCNAMEs;
class BatchTooLarge extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "BatchTooLarge",
            $fault: "client",
            ...opts,
        });
        this.name = "BatchTooLarge";
        this.$fault = "client";
        Object.setPrototypeOf(this, BatchTooLarge.prototype);
        this.Message = opts.Message;
    }
}
exports.BatchTooLarge = BatchTooLarge;
var ItemSelection;
(function (ItemSelection) {
    ItemSelection["all"] = "all";
    ItemSelection["none"] = "none";
    ItemSelection["whitelist"] = "whitelist";
})(ItemSelection = exports.ItemSelection || (exports.ItemSelection = {}));
var EventType;
(function (EventType) {
    EventType["origin_request"] = "origin-request";
    EventType["origin_response"] = "origin-response";
    EventType["viewer_request"] = "viewer-request";
    EventType["viewer_response"] = "viewer-response";
})(EventType = exports.EventType || (exports.EventType = {}));
var ViewerProtocolPolicy;
(function (ViewerProtocolPolicy) {
    ViewerProtocolPolicy["allow_all"] = "allow-all";
    ViewerProtocolPolicy["https_only"] = "https-only";
    ViewerProtocolPolicy["redirect_to_https"] = "redirect-to-https";
})(ViewerProtocolPolicy = exports.ViewerProtocolPolicy || (exports.ViewerProtocolPolicy = {}));
var CachePolicyCookieBehavior;
(function (CachePolicyCookieBehavior) {
    CachePolicyCookieBehavior["all"] = "all";
    CachePolicyCookieBehavior["allExcept"] = "allExcept";
    CachePolicyCookieBehavior["none"] = "none";
    CachePolicyCookieBehavior["whitelist"] = "whitelist";
})(CachePolicyCookieBehavior = exports.CachePolicyCookieBehavior || (exports.CachePolicyCookieBehavior = {}));
var CachePolicyHeaderBehavior;
(function (CachePolicyHeaderBehavior) {
    CachePolicyHeaderBehavior["none"] = "none";
    CachePolicyHeaderBehavior["whitelist"] = "whitelist";
})(CachePolicyHeaderBehavior = exports.CachePolicyHeaderBehavior || (exports.CachePolicyHeaderBehavior = {}));
var CachePolicyQueryStringBehavior;
(function (CachePolicyQueryStringBehavior) {
    CachePolicyQueryStringBehavior["all"] = "all";
    CachePolicyQueryStringBehavior["allExcept"] = "allExcept";
    CachePolicyQueryStringBehavior["none"] = "none";
    CachePolicyQueryStringBehavior["whitelist"] = "whitelist";
})(CachePolicyQueryStringBehavior = exports.CachePolicyQueryStringBehavior || (exports.CachePolicyQueryStringBehavior = {}));
class CachePolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "CachePolicyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "CachePolicyAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, CachePolicyAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.CachePolicyAlreadyExists = CachePolicyAlreadyExists;
class CachePolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "CachePolicyInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "CachePolicyInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, CachePolicyInUse.prototype);
        this.Message = opts.Message;
    }
}
exports.CachePolicyInUse = CachePolicyInUse;
var CachePolicyType;
(function (CachePolicyType) {
    CachePolicyType["custom"] = "custom";
    CachePolicyType["managed"] = "managed";
})(CachePolicyType = exports.CachePolicyType || (exports.CachePolicyType = {}));
class CannotChangeImmutablePublicKeyFields extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "CannotChangeImmutablePublicKeyFields",
            $fault: "client",
            ...opts,
        });
        this.name = "CannotChangeImmutablePublicKeyFields";
        this.$fault = "client";
        Object.setPrototypeOf(this, CannotChangeImmutablePublicKeyFields.prototype);
        this.Message = opts.Message;
    }
}
exports.CannotChangeImmutablePublicKeyFields = CannotChangeImmutablePublicKeyFields;
var CertificateSource;
(function (CertificateSource) {
    CertificateSource["acm"] = "acm";
    CertificateSource["cloudfront"] = "cloudfront";
    CertificateSource["iam"] = "iam";
})(CertificateSource = exports.CertificateSource || (exports.CertificateSource = {}));
class CNAMEAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "CNAMEAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "CNAMEAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, CNAMEAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.CNAMEAlreadyExists = CNAMEAlreadyExists;
var HttpVersion;
(function (HttpVersion) {
    HttpVersion["http1_1"] = "http1.1";
    HttpVersion["http2"] = "http2";
    HttpVersion["http2and3"] = "http2and3";
    HttpVersion["http3"] = "http3";
})(HttpVersion = exports.HttpVersion || (exports.HttpVersion = {}));
var OriginProtocolPolicy;
(function (OriginProtocolPolicy) {
    OriginProtocolPolicy["http_only"] = "http-only";
    OriginProtocolPolicy["https_only"] = "https-only";
    OriginProtocolPolicy["match_viewer"] = "match-viewer";
})(OriginProtocolPolicy = exports.OriginProtocolPolicy || (exports.OriginProtocolPolicy = {}));
var SslProtocol;
(function (SslProtocol) {
    SslProtocol["SSLv3"] = "SSLv3";
    SslProtocol["TLSv1"] = "TLSv1";
    SslProtocol["TLSv1_1"] = "TLSv1.1";
    SslProtocol["TLSv1_2"] = "TLSv1.2";
})(SslProtocol = exports.SslProtocol || (exports.SslProtocol = {}));
var PriceClass;
(function (PriceClass) {
    PriceClass["PriceClass_100"] = "PriceClass_100";
    PriceClass["PriceClass_200"] = "PriceClass_200";
    PriceClass["PriceClass_All"] = "PriceClass_All";
})(PriceClass = exports.PriceClass || (exports.PriceClass = {}));
var GeoRestrictionType;
(function (GeoRestrictionType) {
    GeoRestrictionType["blacklist"] = "blacklist";
    GeoRestrictionType["none"] = "none";
    GeoRestrictionType["whitelist"] = "whitelist";
})(GeoRestrictionType = exports.GeoRestrictionType || (exports.GeoRestrictionType = {}));
var MinimumProtocolVersion;
(function (MinimumProtocolVersion) {
    MinimumProtocolVersion["SSLv3"] = "SSLv3";
    MinimumProtocolVersion["TLSv1"] = "TLSv1";
    MinimumProtocolVersion["TLSv1_1_2016"] = "TLSv1.1_2016";
    MinimumProtocolVersion["TLSv1_2016"] = "TLSv1_2016";
    MinimumProtocolVersion["TLSv1_2_2018"] = "TLSv1.2_2018";
    MinimumProtocolVersion["TLSv1_2_2019"] = "TLSv1.2_2019";
    MinimumProtocolVersion["TLSv1_2_2021"] = "TLSv1.2_2021";
})(MinimumProtocolVersion = exports.MinimumProtocolVersion || (exports.MinimumProtocolVersion = {}));
var SSLSupportMethod;
(function (SSLSupportMethod) {
    SSLSupportMethod["sni_only"] = "sni-only";
    SSLSupportMethod["static_ip"] = "static-ip";
    SSLSupportMethod["vip"] = "vip";
})(SSLSupportMethod = exports.SSLSupportMethod || (exports.SSLSupportMethod = {}));
class DistributionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "DistributionAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "DistributionAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, DistributionAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.DistributionAlreadyExists = DistributionAlreadyExists;
class IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior",
            $fault: "client",
            ...opts,
        });
        this.name = "IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior";
        this.$fault = "client";
        Object.setPrototypeOf(this, IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior.prototype);
        this.Message = opts.Message;
    }
}
exports.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior = IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior;
class InconsistentQuantities extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InconsistentQuantities",
            $fault: "client",
            ...opts,
        });
        this.name = "InconsistentQuantities";
        this.$fault = "client";
        Object.setPrototypeOf(this, InconsistentQuantities.prototype);
        this.Message = opts.Message;
    }
}
exports.InconsistentQuantities = InconsistentQuantities;
class InvalidDefaultRootObject extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidDefaultRootObject",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDefaultRootObject";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDefaultRootObject.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidDefaultRootObject = InvalidDefaultRootObject;
class InvalidErrorCode extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidErrorCode",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidErrorCode";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidErrorCode.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidErrorCode = InvalidErrorCode;
class InvalidForwardCookies extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidForwardCookies",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidForwardCookies";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidForwardCookies.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidForwardCookies = InvalidForwardCookies;
class InvalidFunctionAssociation extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidFunctionAssociation",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidFunctionAssociation";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidFunctionAssociation.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidFunctionAssociation = InvalidFunctionAssociation;
class InvalidGeoRestrictionParameter extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidGeoRestrictionParameter",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidGeoRestrictionParameter";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidGeoRestrictionParameter.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidGeoRestrictionParameter = InvalidGeoRestrictionParameter;
class InvalidHeadersForS3Origin extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidHeadersForS3Origin",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidHeadersForS3Origin";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidHeadersForS3Origin.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidHeadersForS3Origin = InvalidHeadersForS3Origin;
class InvalidIfMatchVersion extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidIfMatchVersion",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidIfMatchVersion";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidIfMatchVersion.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidIfMatchVersion = InvalidIfMatchVersion;
class InvalidLambdaFunctionAssociation extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidLambdaFunctionAssociation",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLambdaFunctionAssociation";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLambdaFunctionAssociation.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidLambdaFunctionAssociation = InvalidLambdaFunctionAssociation;
class InvalidLocationCode extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidLocationCode",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLocationCode";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLocationCode.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidLocationCode = InvalidLocationCode;
class InvalidMinimumProtocolVersion extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidMinimumProtocolVersion",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidMinimumProtocolVersion";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidMinimumProtocolVersion.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidMinimumProtocolVersion = InvalidMinimumProtocolVersion;
class InvalidOrigin extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidOrigin",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOrigin";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOrigin.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidOrigin = InvalidOrigin;
class InvalidOriginAccessControl extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidOriginAccessControl",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOriginAccessControl";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOriginAccessControl.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidOriginAccessControl = InvalidOriginAccessControl;
class InvalidOriginAccessIdentity extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidOriginAccessIdentity",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOriginAccessIdentity";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOriginAccessIdentity.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidOriginAccessIdentity = InvalidOriginAccessIdentity;
class InvalidOriginKeepaliveTimeout extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidOriginKeepaliveTimeout",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOriginKeepaliveTimeout";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOriginKeepaliveTimeout.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidOriginKeepaliveTimeout = InvalidOriginKeepaliveTimeout;
class InvalidOriginReadTimeout extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidOriginReadTimeout",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOriginReadTimeout";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOriginReadTimeout.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidOriginReadTimeout = InvalidOriginReadTimeout;
class InvalidProtocolSettings extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidProtocolSettings",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidProtocolSettings";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidProtocolSettings.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidProtocolSettings = InvalidProtocolSettings;
class InvalidQueryStringParameters extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidQueryStringParameters",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidQueryStringParameters";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidQueryStringParameters.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidQueryStringParameters = InvalidQueryStringParameters;
class InvalidRelativePath extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidRelativePath",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRelativePath";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRelativePath.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidRelativePath = InvalidRelativePath;
class InvalidRequiredProtocol extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidRequiredProtocol",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequiredProtocol";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequiredProtocol.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidRequiredProtocol = InvalidRequiredProtocol;
class InvalidResponseCode extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidResponseCode",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidResponseCode";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidResponseCode.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidResponseCode = InvalidResponseCode;
class InvalidTTLOrder extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidTTLOrder",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTTLOrder";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTTLOrder.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidTTLOrder = InvalidTTLOrder;
class InvalidViewerCertificate extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidViewerCertificate",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidViewerCertificate";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidViewerCertificate.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidViewerCertificate = InvalidViewerCertificate;
class InvalidWebACLId extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidWebACLId",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidWebACLId";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidWebACLId.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidWebACLId = InvalidWebACLId;
class MissingBody extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "MissingBody",
            $fault: "client",
            ...opts,
        });
        this.name = "MissingBody";
        this.$fault = "client";
        Object.setPrototypeOf(this, MissingBody.prototype);
        this.Message = opts.Message;
    }
}
exports.MissingBody = MissingBody;
class NoSuchCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchCachePolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchCachePolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchCachePolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchCachePolicy = NoSuchCachePolicy;
class NoSuchFieldLevelEncryptionConfig extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchFieldLevelEncryptionConfig",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchFieldLevelEncryptionConfig";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchFieldLevelEncryptionConfig.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchFieldLevelEncryptionConfig = NoSuchFieldLevelEncryptionConfig;
class NoSuchOrigin extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchOrigin",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchOrigin";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchOrigin.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchOrigin = NoSuchOrigin;
class NoSuchOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchOriginRequestPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchOriginRequestPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchOriginRequestPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchOriginRequestPolicy = NoSuchOriginRequestPolicy;
class NoSuchRealtimeLogConfig extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchRealtimeLogConfig",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchRealtimeLogConfig";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchRealtimeLogConfig.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchRealtimeLogConfig = NoSuchRealtimeLogConfig;
class NoSuchResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchResponseHeadersPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchResponseHeadersPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchResponseHeadersPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchResponseHeadersPolicy = NoSuchResponseHeadersPolicy;
class PreconditionFailed extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "PreconditionFailed",
            $fault: "client",
            ...opts,
        });
        this.name = "PreconditionFailed";
        this.$fault = "client";
        Object.setPrototypeOf(this, PreconditionFailed.prototype);
        this.Message = opts.Message;
    }
}
exports.PreconditionFailed = PreconditionFailed;
class RealtimeLogConfigOwnerMismatch extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "RealtimeLogConfigOwnerMismatch",
            $fault: "client",
            ...opts,
        });
        this.name = "RealtimeLogConfigOwnerMismatch";
        this.$fault = "client";
        Object.setPrototypeOf(this, RealtimeLogConfigOwnerMismatch.prototype);
        this.Message = opts.Message;
    }
}
exports.RealtimeLogConfigOwnerMismatch = RealtimeLogConfigOwnerMismatch;
class TooManyCacheBehaviors extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCacheBehaviors",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCacheBehaviors";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCacheBehaviors.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCacheBehaviors = TooManyCacheBehaviors;
class TooManyCertificates extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCertificates",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCertificates";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCertificates.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCertificates = TooManyCertificates;
class TooManyCookieNamesInWhiteList extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCookieNamesInWhiteList",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCookieNamesInWhiteList";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCookieNamesInWhiteList.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCookieNamesInWhiteList = TooManyCookieNamesInWhiteList;
class TooManyDistributions extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributions",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributions";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributions.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributions = TooManyDistributions;
class TooManyDistributionsAssociatedToCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsAssociatedToCachePolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsAssociatedToCachePolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToCachePolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsAssociatedToCachePolicy = TooManyDistributionsAssociatedToCachePolicy;
class TooManyDistributionsAssociatedToFieldLevelEncryptionConfig extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsAssociatedToFieldLevelEncryptionConfig",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsAssociatedToFieldLevelEncryptionConfig";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToFieldLevelEncryptionConfig.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig = TooManyDistributionsAssociatedToFieldLevelEncryptionConfig;
class TooManyDistributionsAssociatedToKeyGroup extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsAssociatedToKeyGroup",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsAssociatedToKeyGroup";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToKeyGroup.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsAssociatedToKeyGroup = TooManyDistributionsAssociatedToKeyGroup;
class TooManyDistributionsAssociatedToOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsAssociatedToOriginRequestPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsAssociatedToOriginRequestPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToOriginRequestPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsAssociatedToOriginRequestPolicy = TooManyDistributionsAssociatedToOriginRequestPolicy;
class TooManyDistributionsAssociatedToResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsAssociatedToResponseHeadersPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsAssociatedToResponseHeadersPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToResponseHeadersPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsAssociatedToResponseHeadersPolicy = TooManyDistributionsAssociatedToResponseHeadersPolicy;
class TooManyDistributionsWithFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsWithFunctionAssociations",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsWithFunctionAssociations";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsWithFunctionAssociations.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsWithFunctionAssociations = TooManyDistributionsWithFunctionAssociations;
class TooManyDistributionsWithLambdaAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsWithLambdaAssociations",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsWithLambdaAssociations";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsWithLambdaAssociations.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsWithLambdaAssociations = TooManyDistributionsWithLambdaAssociations;
class TooManyDistributionsWithSingleFunctionARN extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsWithSingleFunctionARN",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsWithSingleFunctionARN";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsWithSingleFunctionARN.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsWithSingleFunctionARN = TooManyDistributionsWithSingleFunctionARN;
class TooManyFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFunctionAssociations",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFunctionAssociations";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFunctionAssociations.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFunctionAssociations = TooManyFunctionAssociations;
class TooManyHeadersInForwardedValues extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyHeadersInForwardedValues",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyHeadersInForwardedValues";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyHeadersInForwardedValues.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyHeadersInForwardedValues = TooManyHeadersInForwardedValues;
class TooManyKeyGroupsAssociatedToDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyKeyGroupsAssociatedToDistribution",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyKeyGroupsAssociatedToDistribution";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyKeyGroupsAssociatedToDistribution.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyKeyGroupsAssociatedToDistribution = TooManyKeyGroupsAssociatedToDistribution;
class TooManyLambdaFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyLambdaFunctionAssociations",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyLambdaFunctionAssociations";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyLambdaFunctionAssociations.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyLambdaFunctionAssociations = TooManyLambdaFunctionAssociations;
class TooManyOriginCustomHeaders extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyOriginCustomHeaders",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyOriginCustomHeaders";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyOriginCustomHeaders.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyOriginCustomHeaders = TooManyOriginCustomHeaders;
class TooManyOriginGroupsPerDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyOriginGroupsPerDistribution",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyOriginGroupsPerDistribution";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyOriginGroupsPerDistribution.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyOriginGroupsPerDistribution = TooManyOriginGroupsPerDistribution;
class TooManyOrigins extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyOrigins",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyOrigins";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyOrigins.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyOrigins = TooManyOrigins;
class TooManyQueryStringParameters extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyQueryStringParameters",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyQueryStringParameters";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyQueryStringParameters.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyQueryStringParameters = TooManyQueryStringParameters;
class TooManyTrustedSigners extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyTrustedSigners",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTrustedSigners";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTrustedSigners.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyTrustedSigners = TooManyTrustedSigners;
class TrustedKeyGroupDoesNotExist extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TrustedKeyGroupDoesNotExist",
            $fault: "client",
            ...opts,
        });
        this.name = "TrustedKeyGroupDoesNotExist";
        this.$fault = "client";
        Object.setPrototypeOf(this, TrustedKeyGroupDoesNotExist.prototype);
        this.Message = opts.Message;
    }
}
exports.TrustedKeyGroupDoesNotExist = TrustedKeyGroupDoesNotExist;
class TrustedSignerDoesNotExist extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TrustedSignerDoesNotExist",
            $fault: "client",
            ...opts,
        });
        this.name = "TrustedSignerDoesNotExist";
        this.$fault = "client";
        Object.setPrototypeOf(this, TrustedSignerDoesNotExist.prototype);
        this.Message = opts.Message;
    }
}
exports.TrustedSignerDoesNotExist = TrustedSignerDoesNotExist;
class TooManyCachePolicies extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCachePolicies",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCachePolicies";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCachePolicies.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCachePolicies = TooManyCachePolicies;
class TooManyCookiesInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCookiesInCachePolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCookiesInCachePolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCookiesInCachePolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCookiesInCachePolicy = TooManyCookiesInCachePolicy;
class TooManyHeadersInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyHeadersInCachePolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyHeadersInCachePolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyHeadersInCachePolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyHeadersInCachePolicy = TooManyHeadersInCachePolicy;
class TooManyQueryStringsInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyQueryStringsInCachePolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyQueryStringsInCachePolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyQueryStringsInCachePolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyQueryStringsInCachePolicy = TooManyQueryStringsInCachePolicy;
class CloudFrontOriginAccessIdentityAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "CloudFrontOriginAccessIdentityAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "CloudFrontOriginAccessIdentityAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, CloudFrontOriginAccessIdentityAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.CloudFrontOriginAccessIdentityAlreadyExists = CloudFrontOriginAccessIdentityAlreadyExists;
class TooManyCloudFrontOriginAccessIdentities extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCloudFrontOriginAccessIdentities",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCloudFrontOriginAccessIdentities";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCloudFrontOriginAccessIdentities.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCloudFrontOriginAccessIdentities = TooManyCloudFrontOriginAccessIdentities;
var ContinuousDeploymentPolicyType;
(function (ContinuousDeploymentPolicyType) {
    ContinuousDeploymentPolicyType["SingleHeader"] = "SingleHeader";
    ContinuousDeploymentPolicyType["SingleWeight"] = "SingleWeight";
})(ContinuousDeploymentPolicyType = exports.ContinuousDeploymentPolicyType || (exports.ContinuousDeploymentPolicyType = {}));
class StagingDistributionInUse extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "StagingDistributionInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "StagingDistributionInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, StagingDistributionInUse.prototype);
        this.Message = opts.Message;
    }
}
exports.StagingDistributionInUse = StagingDistributionInUse;
class IllegalOriginAccessConfiguration extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "IllegalOriginAccessConfiguration",
            $fault: "client",
            ...opts,
        });
        this.name = "IllegalOriginAccessConfiguration";
        this.$fault = "client";
        Object.setPrototypeOf(this, IllegalOriginAccessConfiguration.prototype);
        this.Message = opts.Message;
    }
}
exports.IllegalOriginAccessConfiguration = IllegalOriginAccessConfiguration;
class InvalidDomainNameForOriginAccessControl extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidDomainNameForOriginAccessControl",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDomainNameForOriginAccessControl";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDomainNameForOriginAccessControl.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidDomainNameForOriginAccessControl = InvalidDomainNameForOriginAccessControl;
class TooManyDistributionsAssociatedToOriginAccessControl extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyDistributionsAssociatedToOriginAccessControl",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyDistributionsAssociatedToOriginAccessControl";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToOriginAccessControl.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyDistributionsAssociatedToOriginAccessControl = TooManyDistributionsAssociatedToOriginAccessControl;
class InvalidTagging extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "InvalidTagging",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTagging";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTagging.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidTagging = InvalidTagging;
var Format;
(function (Format) {
    Format["URLEncoded"] = "URLEncoded";
})(Format = exports.Format || (exports.Format = {}));
class FieldLevelEncryptionConfigAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "FieldLevelEncryptionConfigAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "FieldLevelEncryptionConfigAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, FieldLevelEncryptionConfigAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.FieldLevelEncryptionConfigAlreadyExists = FieldLevelEncryptionConfigAlreadyExists;
class NoSuchFieldLevelEncryptionProfile extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchFieldLevelEncryptionProfile",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchFieldLevelEncryptionProfile";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchFieldLevelEncryptionProfile.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchFieldLevelEncryptionProfile = NoSuchFieldLevelEncryptionProfile;
class QueryArgProfileEmpty extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "QueryArgProfileEmpty",
            $fault: "client",
            ...opts,
        });
        this.name = "QueryArgProfileEmpty";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueryArgProfileEmpty.prototype);
        this.Message = opts.Message;
    }
}
exports.QueryArgProfileEmpty = QueryArgProfileEmpty;
class TooManyFieldLevelEncryptionConfigs extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFieldLevelEncryptionConfigs",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFieldLevelEncryptionConfigs";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionConfigs.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFieldLevelEncryptionConfigs = TooManyFieldLevelEncryptionConfigs;
class TooManyFieldLevelEncryptionContentTypeProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFieldLevelEncryptionContentTypeProfiles",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFieldLevelEncryptionContentTypeProfiles";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionContentTypeProfiles.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFieldLevelEncryptionContentTypeProfiles = TooManyFieldLevelEncryptionContentTypeProfiles;
class TooManyFieldLevelEncryptionQueryArgProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFieldLevelEncryptionQueryArgProfiles",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFieldLevelEncryptionQueryArgProfiles";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionQueryArgProfiles.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFieldLevelEncryptionQueryArgProfiles = TooManyFieldLevelEncryptionQueryArgProfiles;
class FieldLevelEncryptionProfileAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "FieldLevelEncryptionProfileAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "FieldLevelEncryptionProfileAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, FieldLevelEncryptionProfileAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.FieldLevelEncryptionProfileAlreadyExists = FieldLevelEncryptionProfileAlreadyExists;
class FieldLevelEncryptionProfileSizeExceeded extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "FieldLevelEncryptionProfileSizeExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "FieldLevelEncryptionProfileSizeExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, FieldLevelEncryptionProfileSizeExceeded.prototype);
        this.Message = opts.Message;
    }
}
exports.FieldLevelEncryptionProfileSizeExceeded = FieldLevelEncryptionProfileSizeExceeded;
class NoSuchPublicKey extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "NoSuchPublicKey",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchPublicKey";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchPublicKey.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchPublicKey = NoSuchPublicKey;
class TooManyFieldLevelEncryptionEncryptionEntities extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFieldLevelEncryptionEncryptionEntities",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFieldLevelEncryptionEncryptionEntities";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionEncryptionEntities.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFieldLevelEncryptionEncryptionEntities = TooManyFieldLevelEncryptionEncryptionEntities;
class TooManyFieldLevelEncryptionFieldPatterns extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFieldLevelEncryptionFieldPatterns",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFieldLevelEncryptionFieldPatterns";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionFieldPatterns.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFieldLevelEncryptionFieldPatterns = TooManyFieldLevelEncryptionFieldPatterns;
class TooManyFieldLevelEncryptionProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFieldLevelEncryptionProfiles",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFieldLevelEncryptionProfiles";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionProfiles.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFieldLevelEncryptionProfiles = TooManyFieldLevelEncryptionProfiles;
var FunctionRuntime;
(function (FunctionRuntime) {
    FunctionRuntime["cloudfront_js_1_0"] = "cloudfront-js-1.0";
})(FunctionRuntime = exports.FunctionRuntime || (exports.FunctionRuntime = {}));
var FunctionStage;
(function (FunctionStage) {
    FunctionStage["DEVELOPMENT"] = "DEVELOPMENT";
    FunctionStage["LIVE"] = "LIVE";
})(FunctionStage = exports.FunctionStage || (exports.FunctionStage = {}));
class FunctionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "FunctionAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "FunctionAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, FunctionAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.FunctionAlreadyExists = FunctionAlreadyExists;
class FunctionSizeLimitExceeded extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "FunctionSizeLimitExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "FunctionSizeLimitExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, FunctionSizeLimitExceeded.prototype);
        this.Message = opts.Message;
    }
}
exports.FunctionSizeLimitExceeded = FunctionSizeLimitExceeded;
class TooManyFunctions extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyFunctions",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFunctions";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFunctions.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyFunctions = TooManyFunctions;
class UnsupportedOperation extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedOperation",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOperation";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOperation.prototype);
        this.Message = opts.Message;
    }
}
exports.UnsupportedOperation = UnsupportedOperation;
class TooManyInvalidationsInProgress extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyInvalidationsInProgress",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyInvalidationsInProgress";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyInvalidationsInProgress.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyInvalidationsInProgress = TooManyInvalidationsInProgress;
class KeyGroupAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "KeyGroupAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "KeyGroupAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, KeyGroupAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.KeyGroupAlreadyExists = KeyGroupAlreadyExists;
class TooManyKeyGroups extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyKeyGroups",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyKeyGroups";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyKeyGroups.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyKeyGroups = TooManyKeyGroups;
class TooManyPublicKeysInKeyGroup extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyPublicKeysInKeyGroup",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyPublicKeysInKeyGroup";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyPublicKeysInKeyGroup.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyPublicKeysInKeyGroup = TooManyPublicKeysInKeyGroup;
var RealtimeMetricsSubscriptionStatus;
(function (RealtimeMetricsSubscriptionStatus) {
    RealtimeMetricsSubscriptionStatus["Disabled"] = "Disabled";
    RealtimeMetricsSubscriptionStatus["Enabled"] = "Enabled";
})(RealtimeMetricsSubscriptionStatus = exports.RealtimeMetricsSubscriptionStatus || (exports.RealtimeMetricsSubscriptionStatus = {}));
class MonitoringSubscriptionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "MonitoringSubscriptionAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "MonitoringSubscriptionAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, MonitoringSubscriptionAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.MonitoringSubscriptionAlreadyExists = MonitoringSubscriptionAlreadyExists;
var OriginAccessControlOriginTypes;
(function (OriginAccessControlOriginTypes) {
    OriginAccessControlOriginTypes["s3"] = "s3";
})(OriginAccessControlOriginTypes = exports.OriginAccessControlOriginTypes || (exports.OriginAccessControlOriginTypes = {}));
var OriginAccessControlSigningBehaviors;
(function (OriginAccessControlSigningBehaviors) {
    OriginAccessControlSigningBehaviors["always"] = "always";
    OriginAccessControlSigningBehaviors["never"] = "never";
    OriginAccessControlSigningBehaviors["no_override"] = "no-override";
})(OriginAccessControlSigningBehaviors = exports.OriginAccessControlSigningBehaviors || (exports.OriginAccessControlSigningBehaviors = {}));
var OriginAccessControlSigningProtocols;
(function (OriginAccessControlSigningProtocols) {
    OriginAccessControlSigningProtocols["sigv4"] = "sigv4";
})(OriginAccessControlSigningProtocols = exports.OriginAccessControlSigningProtocols || (exports.OriginAccessControlSigningProtocols = {}));
class OriginAccessControlAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "OriginAccessControlAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "OriginAccessControlAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, OriginAccessControlAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.OriginAccessControlAlreadyExists = OriginAccessControlAlreadyExists;
class TooManyOriginAccessControls extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyOriginAccessControls",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyOriginAccessControls";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyOriginAccessControls.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyOriginAccessControls = TooManyOriginAccessControls;
var OriginRequestPolicyCookieBehavior;
(function (OriginRequestPolicyCookieBehavior) {
    OriginRequestPolicyCookieBehavior["all"] = "all";
    OriginRequestPolicyCookieBehavior["none"] = "none";
    OriginRequestPolicyCookieBehavior["whitelist"] = "whitelist";
})(OriginRequestPolicyCookieBehavior = exports.OriginRequestPolicyCookieBehavior || (exports.OriginRequestPolicyCookieBehavior = {}));
var OriginRequestPolicyHeaderBehavior;
(function (OriginRequestPolicyHeaderBehavior) {
    OriginRequestPolicyHeaderBehavior["allViewer"] = "allViewer";
    OriginRequestPolicyHeaderBehavior["allViewerAndWhitelistCloudFront"] = "allViewerAndWhitelistCloudFront";
    OriginRequestPolicyHeaderBehavior["none"] = "none";
    OriginRequestPolicyHeaderBehavior["whitelist"] = "whitelist";
})(OriginRequestPolicyHeaderBehavior = exports.OriginRequestPolicyHeaderBehavior || (exports.OriginRequestPolicyHeaderBehavior = {}));
var OriginRequestPolicyQueryStringBehavior;
(function (OriginRequestPolicyQueryStringBehavior) {
    OriginRequestPolicyQueryStringBehavior["all"] = "all";
    OriginRequestPolicyQueryStringBehavior["none"] = "none";
    OriginRequestPolicyQueryStringBehavior["whitelist"] = "whitelist";
})(OriginRequestPolicyQueryStringBehavior = exports.OriginRequestPolicyQueryStringBehavior || (exports.OriginRequestPolicyQueryStringBehavior = {}));
class OriginRequestPolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "OriginRequestPolicyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "OriginRequestPolicyAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, OriginRequestPolicyAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.OriginRequestPolicyAlreadyExists = OriginRequestPolicyAlreadyExists;
class TooManyCookiesInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCookiesInOriginRequestPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCookiesInOriginRequestPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCookiesInOriginRequestPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCookiesInOriginRequestPolicy = TooManyCookiesInOriginRequestPolicy;
class TooManyHeadersInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyHeadersInOriginRequestPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyHeadersInOriginRequestPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyHeadersInOriginRequestPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyHeadersInOriginRequestPolicy = TooManyHeadersInOriginRequestPolicy;
class TooManyOriginRequestPolicies extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyOriginRequestPolicies",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyOriginRequestPolicies";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyOriginRequestPolicies.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyOriginRequestPolicies = TooManyOriginRequestPolicies;
class TooManyQueryStringsInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyQueryStringsInOriginRequestPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyQueryStringsInOriginRequestPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyQueryStringsInOriginRequestPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyQueryStringsInOriginRequestPolicy = TooManyQueryStringsInOriginRequestPolicy;
class PublicKeyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "PublicKeyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "PublicKeyAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, PublicKeyAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.PublicKeyAlreadyExists = PublicKeyAlreadyExists;
class TooManyPublicKeys extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyPublicKeys",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyPublicKeys";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyPublicKeys.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyPublicKeys = TooManyPublicKeys;
class RealtimeLogConfigAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "RealtimeLogConfigAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "RealtimeLogConfigAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, RealtimeLogConfigAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.RealtimeLogConfigAlreadyExists = RealtimeLogConfigAlreadyExists;
class TooManyRealtimeLogConfigs extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyRealtimeLogConfigs",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRealtimeLogConfigs";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRealtimeLogConfigs.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyRealtimeLogConfigs = TooManyRealtimeLogConfigs;
var FrameOptionsList;
(function (FrameOptionsList) {
    FrameOptionsList["DENY"] = "DENY";
    FrameOptionsList["SAMEORIGIN"] = "SAMEORIGIN";
})(FrameOptionsList = exports.FrameOptionsList || (exports.FrameOptionsList = {}));
var ReferrerPolicyList;
(function (ReferrerPolicyList) {
    ReferrerPolicyList["no_referrer"] = "no-referrer";
    ReferrerPolicyList["no_referrer_when_downgrade"] = "no-referrer-when-downgrade";
    ReferrerPolicyList["origin"] = "origin";
    ReferrerPolicyList["origin_when_cross_origin"] = "origin-when-cross-origin";
    ReferrerPolicyList["same_origin"] = "same-origin";
    ReferrerPolicyList["strict_origin"] = "strict-origin";
    ReferrerPolicyList["strict_origin_when_cross_origin"] = "strict-origin-when-cross-origin";
    ReferrerPolicyList["unsafe_url"] = "unsafe-url";
})(ReferrerPolicyList = exports.ReferrerPolicyList || (exports.ReferrerPolicyList = {}));
class ResponseHeadersPolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "ResponseHeadersPolicyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "ResponseHeadersPolicyAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResponseHeadersPolicyAlreadyExists.prototype);
        this.Message = opts.Message;
    }
}
exports.ResponseHeadersPolicyAlreadyExists = ResponseHeadersPolicyAlreadyExists;
class TooLongCSPInResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooLongCSPInResponseHeadersPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooLongCSPInResponseHeadersPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooLongCSPInResponseHeadersPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooLongCSPInResponseHeadersPolicy = TooLongCSPInResponseHeadersPolicy;
class TooManyCustomHeadersInResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyCustomHeadersInResponseHeadersPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyCustomHeadersInResponseHeadersPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyCustomHeadersInResponseHeadersPolicy.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyCustomHeadersInResponseHeadersPolicy = TooManyCustomHeadersInResponseHeadersPolicy;
class TooManyResponseHeadersPolicies extends CloudFrontServiceException_1.CloudFrontServiceException {
    constructor(opts) {
        super({
            name: "TooManyResponseHeadersPolicies",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyResponseHeadersPolicies";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyResponseHeadersPolicies.prototype);
        this.Message = opts.Message;
    }
}
exports.TooManyResponseHeadersPolicies = TooManyResponseHeadersPolicies;
const KeyPairIdsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KeyPairIdsFilterSensitiveLog = KeyPairIdsFilterSensitiveLog;
const KGKeyPairIdsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KGKeyPairIdsFilterSensitiveLog = KGKeyPairIdsFilterSensitiveLog;
const ActiveTrustedKeyGroupsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActiveTrustedKeyGroupsFilterSensitiveLog = ActiveTrustedKeyGroupsFilterSensitiveLog;
const SignerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SignerFilterSensitiveLog = SignerFilterSensitiveLog;
const ActiveTrustedSignersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActiveTrustedSignersFilterSensitiveLog = ActiveTrustedSignersFilterSensitiveLog;
const AliasesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AliasesFilterSensitiveLog = AliasesFilterSensitiveLog;
const AliasICPRecordalFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AliasICPRecordalFilterSensitiveLog = AliasICPRecordalFilterSensitiveLog;
const CachedMethodsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachedMethodsFilterSensitiveLog = CachedMethodsFilterSensitiveLog;
const AllowedMethodsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllowedMethodsFilterSensitiveLog = AllowedMethodsFilterSensitiveLog;
const AssociateAliasRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateAliasRequestFilterSensitiveLog = AssociateAliasRequestFilterSensitiveLog;
const CookieNamesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CookieNamesFilterSensitiveLog = CookieNamesFilterSensitiveLog;
const CookiePreferenceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CookiePreferenceFilterSensitiveLog = CookiePreferenceFilterSensitiveLog;
const HeadersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HeadersFilterSensitiveLog = HeadersFilterSensitiveLog;
const QueryStringCacheKeysFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.QueryStringCacheKeysFilterSensitiveLog = QueryStringCacheKeysFilterSensitiveLog;
const ForwardedValuesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ForwardedValuesFilterSensitiveLog = ForwardedValuesFilterSensitiveLog;
const FunctionAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionAssociationFilterSensitiveLog = FunctionAssociationFilterSensitiveLog;
const FunctionAssociationsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionAssociationsFilterSensitiveLog = FunctionAssociationsFilterSensitiveLog;
const LambdaFunctionAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LambdaFunctionAssociationFilterSensitiveLog = LambdaFunctionAssociationFilterSensitiveLog;
const LambdaFunctionAssociationsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LambdaFunctionAssociationsFilterSensitiveLog = LambdaFunctionAssociationsFilterSensitiveLog;
const TrustedKeyGroupsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrustedKeyGroupsFilterSensitiveLog = TrustedKeyGroupsFilterSensitiveLog;
const TrustedSignersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrustedSignersFilterSensitiveLog = TrustedSignersFilterSensitiveLog;
const CacheBehaviorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CacheBehaviorFilterSensitiveLog = CacheBehaviorFilterSensitiveLog;
const CacheBehaviorsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CacheBehaviorsFilterSensitiveLog = CacheBehaviorsFilterSensitiveLog;
const CachePolicyCookiesConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachePolicyCookiesConfigFilterSensitiveLog = CachePolicyCookiesConfigFilterSensitiveLog;
const CachePolicyHeadersConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachePolicyHeadersConfigFilterSensitiveLog = CachePolicyHeadersConfigFilterSensitiveLog;
const QueryStringNamesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.QueryStringNamesFilterSensitiveLog = QueryStringNamesFilterSensitiveLog;
const CachePolicyQueryStringsConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachePolicyQueryStringsConfigFilterSensitiveLog = CachePolicyQueryStringsConfigFilterSensitiveLog;
const ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog = ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog;
const CachePolicyConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachePolicyConfigFilterSensitiveLog = CachePolicyConfigFilterSensitiveLog;
const CachePolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachePolicyFilterSensitiveLog = CachePolicyFilterSensitiveLog;
const CachePolicySummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachePolicySummaryFilterSensitiveLog = CachePolicySummaryFilterSensitiveLog;
const CachePolicyListFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CachePolicyListFilterSensitiveLog = CachePolicyListFilterSensitiveLog;
const CopyDistributionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyDistributionRequestFilterSensitiveLog = CopyDistributionRequestFilterSensitiveLog;
const CustomErrorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CustomErrorResponseFilterSensitiveLog = CustomErrorResponseFilterSensitiveLog;
const CustomErrorResponsesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CustomErrorResponsesFilterSensitiveLog = CustomErrorResponsesFilterSensitiveLog;
const DefaultCacheBehaviorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DefaultCacheBehaviorFilterSensitiveLog = DefaultCacheBehaviorFilterSensitiveLog;
const LoggingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LoggingConfigFilterSensitiveLog = LoggingConfigFilterSensitiveLog;
const StatusCodesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StatusCodesFilterSensitiveLog = StatusCodesFilterSensitiveLog;
const OriginGroupFailoverCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginGroupFailoverCriteriaFilterSensitiveLog = OriginGroupFailoverCriteriaFilterSensitiveLog;
const OriginGroupMemberFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginGroupMemberFilterSensitiveLog = OriginGroupMemberFilterSensitiveLog;
const OriginGroupMembersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginGroupMembersFilterSensitiveLog = OriginGroupMembersFilterSensitiveLog;
const OriginGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginGroupFilterSensitiveLog = OriginGroupFilterSensitiveLog;
const OriginGroupsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginGroupsFilterSensitiveLog = OriginGroupsFilterSensitiveLog;
const OriginCustomHeaderFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.HeaderValue && { HeaderValue: smithy_client_1.SENSITIVE_STRING }),
});
exports.OriginCustomHeaderFilterSensitiveLog = OriginCustomHeaderFilterSensitiveLog;
const CustomHeadersFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Items && { Items: obj.Items.map((item) => (0, exports.OriginCustomHeaderFilterSensitiveLog)(item)) }),
});
exports.CustomHeadersFilterSensitiveLog = CustomHeadersFilterSensitiveLog;
const OriginSslProtocolsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginSslProtocolsFilterSensitiveLog = OriginSslProtocolsFilterSensitiveLog;
const CustomOriginConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CustomOriginConfigFilterSensitiveLog = CustomOriginConfigFilterSensitiveLog;
const OriginShieldFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginShieldFilterSensitiveLog = OriginShieldFilterSensitiveLog;
const S3OriginConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3OriginConfigFilterSensitiveLog = S3OriginConfigFilterSensitiveLog;
const OriginFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomHeaders && { CustomHeaders: (0, exports.CustomHeadersFilterSensitiveLog)(obj.CustomHeaders) }),
});
exports.OriginFilterSensitiveLog = OriginFilterSensitiveLog;
const OriginsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginsFilterSensitiveLog = OriginsFilterSensitiveLog;
const GeoRestrictionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GeoRestrictionFilterSensitiveLog = GeoRestrictionFilterSensitiveLog;
const RestrictionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestrictionsFilterSensitiveLog = RestrictionsFilterSensitiveLog;
const ViewerCertificateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ViewerCertificateFilterSensitiveLog = ViewerCertificateFilterSensitiveLog;
const DistributionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Comment && { Comment: smithy_client_1.SENSITIVE_STRING }),
});
exports.DistributionConfigFilterSensitiveLog = DistributionConfigFilterSensitiveLog;
const DistributionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),
});
exports.DistributionFilterSensitiveLog = DistributionFilterSensitiveLog;
const CopyDistributionResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),
});
exports.CopyDistributionResultFilterSensitiveLog = CopyDistributionResultFilterSensitiveLog;
const CreateCachePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCachePolicyRequestFilterSensitiveLog = CreateCachePolicyRequestFilterSensitiveLog;
const CreateCachePolicyResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCachePolicyResultFilterSensitiveLog = CreateCachePolicyResultFilterSensitiveLog;
const CloudFrontOriginAccessIdentityConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudFrontOriginAccessIdentityConfigFilterSensitiveLog = CloudFrontOriginAccessIdentityConfigFilterSensitiveLog;
const CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog;
const CloudFrontOriginAccessIdentityFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudFrontOriginAccessIdentityFilterSensitiveLog = CloudFrontOriginAccessIdentityFilterSensitiveLog;
const CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog;
const StagingDistributionDnsNamesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StagingDistributionDnsNamesFilterSensitiveLog = StagingDistributionDnsNamesFilterSensitiveLog;
const ContinuousDeploymentSingleHeaderConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContinuousDeploymentSingleHeaderConfigFilterSensitiveLog = ContinuousDeploymentSingleHeaderConfigFilterSensitiveLog;
const SessionStickinessConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SessionStickinessConfigFilterSensitiveLog = SessionStickinessConfigFilterSensitiveLog;
const ContinuousDeploymentSingleWeightConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContinuousDeploymentSingleWeightConfigFilterSensitiveLog = ContinuousDeploymentSingleWeightConfigFilterSensitiveLog;
const TrafficConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficConfigFilterSensitiveLog = TrafficConfigFilterSensitiveLog;
const ContinuousDeploymentPolicyConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContinuousDeploymentPolicyConfigFilterSensitiveLog = ContinuousDeploymentPolicyConfigFilterSensitiveLog;
const CreateContinuousDeploymentPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContinuousDeploymentPolicyRequestFilterSensitiveLog = CreateContinuousDeploymentPolicyRequestFilterSensitiveLog;
const ContinuousDeploymentPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContinuousDeploymentPolicyFilterSensitiveLog = ContinuousDeploymentPolicyFilterSensitiveLog;
const CreateContinuousDeploymentPolicyResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateContinuousDeploymentPolicyResultFilterSensitiveLog = CreateContinuousDeploymentPolicyResultFilterSensitiveLog;
const CreateDistributionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),
});
exports.CreateDistributionRequestFilterSensitiveLog = CreateDistributionRequestFilterSensitiveLog;
const CreateDistributionResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),
});
exports.CreateDistributionResultFilterSensitiveLog = CreateDistributionResultFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const TagsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagsFilterSensitiveLog = TagsFilterSensitiveLog;
const DistributionConfigWithTagsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),
});
exports.DistributionConfigWithTagsFilterSensitiveLog = DistributionConfigWithTagsFilterSensitiveLog;
const CreateDistributionWithTagsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DistributionConfigWithTags && {
        DistributionConfigWithTags: (0, exports.DistributionConfigWithTagsFilterSensitiveLog)(obj.DistributionConfigWithTags),
    }),
});
exports.CreateDistributionWithTagsRequestFilterSensitiveLog = CreateDistributionWithTagsRequestFilterSensitiveLog;
const CreateDistributionWithTagsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),
});
exports.CreateDistributionWithTagsResultFilterSensitiveLog = CreateDistributionWithTagsResultFilterSensitiveLog;
const ContentTypeProfileFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContentTypeProfileFilterSensitiveLog = ContentTypeProfileFilterSensitiveLog;
const ContentTypeProfilesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContentTypeProfilesFilterSensitiveLog = ContentTypeProfilesFilterSensitiveLog;
const ContentTypeProfileConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContentTypeProfileConfigFilterSensitiveLog = ContentTypeProfileConfigFilterSensitiveLog;
const QueryArgProfileFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.QueryArgProfileFilterSensitiveLog = QueryArgProfileFilterSensitiveLog;
const QueryArgProfilesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.QueryArgProfilesFilterSensitiveLog = QueryArgProfilesFilterSensitiveLog;
const QueryArgProfileConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.QueryArgProfileConfigFilterSensitiveLog = QueryArgProfileConfigFilterSensitiveLog;
const FieldLevelEncryptionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FieldLevelEncryptionConfigFilterSensitiveLog = FieldLevelEncryptionConfigFilterSensitiveLog;
const CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog = CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog;
const FieldLevelEncryptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FieldLevelEncryptionFilterSensitiveLog = FieldLevelEncryptionFilterSensitiveLog;
const CreateFieldLevelEncryptionConfigResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFieldLevelEncryptionConfigResultFilterSensitiveLog = CreateFieldLevelEncryptionConfigResultFilterSensitiveLog;
const FieldPatternsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FieldPatternsFilterSensitiveLog = FieldPatternsFilterSensitiveLog;
const EncryptionEntityFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EncryptionEntityFilterSensitiveLog = EncryptionEntityFilterSensitiveLog;
const EncryptionEntitiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EncryptionEntitiesFilterSensitiveLog = EncryptionEntitiesFilterSensitiveLog;
const FieldLevelEncryptionProfileConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FieldLevelEncryptionProfileConfigFilterSensitiveLog = FieldLevelEncryptionProfileConfigFilterSensitiveLog;
const CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog = CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog;
const FieldLevelEncryptionProfileFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FieldLevelEncryptionProfileFilterSensitiveLog = FieldLevelEncryptionProfileFilterSensitiveLog;
const CreateFieldLevelEncryptionProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFieldLevelEncryptionProfileResultFilterSensitiveLog = CreateFieldLevelEncryptionProfileResultFilterSensitiveLog;
const FunctionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionConfigFilterSensitiveLog = FunctionConfigFilterSensitiveLog;
const CreateFunctionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FunctionCode && { FunctionCode: smithy_client_1.SENSITIVE_STRING }),
});
exports.CreateFunctionRequestFilterSensitiveLog = CreateFunctionRequestFilterSensitiveLog;
const FunctionMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionMetadataFilterSensitiveLog = FunctionMetadataFilterSensitiveLog;
const FunctionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FunctionSummaryFilterSensitiveLog = FunctionSummaryFilterSensitiveLog;
const CreateFunctionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFunctionResultFilterSensitiveLog = CreateFunctionResultFilterSensitiveLog;
const PathsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PathsFilterSensitiveLog = PathsFilterSensitiveLog;
const InvalidationBatchFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InvalidationBatchFilterSensitiveLog = InvalidationBatchFilterSensitiveLog;
const CreateInvalidationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInvalidationRequestFilterSensitiveLog = CreateInvalidationRequestFilterSensitiveLog;
const InvalidationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InvalidationFilterSensitiveLog = InvalidationFilterSensitiveLog;
const CreateInvalidationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateInvalidationResultFilterSensitiveLog = CreateInvalidationResultFilterSensitiveLog;
const KeyGroupConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KeyGroupConfigFilterSensitiveLog = KeyGroupConfigFilterSensitiveLog;
const CreateKeyGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateKeyGroupRequestFilterSensitiveLog = CreateKeyGroupRequestFilterSensitiveLog;
const KeyGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KeyGroupFilterSensitiveLog = KeyGroupFilterSensitiveLog;
const CreateKeyGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateKeyGroupResultFilterSensitiveLog = CreateKeyGroupResultFilterSensitiveLog;
const RealtimeMetricsSubscriptionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RealtimeMetricsSubscriptionConfigFilterSensitiveLog = RealtimeMetricsSubscriptionConfigFilterSensitiveLog;
const MonitoringSubscriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MonitoringSubscriptionFilterSensitiveLog = MonitoringSubscriptionFilterSensitiveLog;
const CreateMonitoringSubscriptionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateMonitoringSubscriptionRequestFilterSensitiveLog = CreateMonitoringSubscriptionRequestFilterSensitiveLog;
const CreateMonitoringSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateMonitoringSubscriptionResultFilterSensitiveLog = CreateMonitoringSubscriptionResultFilterSensitiveLog;
const OriginAccessControlConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginAccessControlConfigFilterSensitiveLog = OriginAccessControlConfigFilterSensitiveLog;
const CreateOriginAccessControlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateOriginAccessControlRequestFilterSensitiveLog = CreateOriginAccessControlRequestFilterSensitiveLog;
const OriginAccessControlFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginAccessControlFilterSensitiveLog = OriginAccessControlFilterSensitiveLog;
const CreateOriginAccessControlResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateOriginAccessControlResultFilterSensitiveLog = CreateOriginAccessControlResultFilterSensitiveLog;
const OriginRequestPolicyCookiesConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginRequestPolicyCookiesConfigFilterSensitiveLog = OriginRequestPolicyCookiesConfigFilterSensitiveLog;
const OriginRequestPolicyHeadersConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginRequestPolicyHeadersConfigFilterSensitiveLog = OriginRequestPolicyHeadersConfigFilterSensitiveLog;
const OriginRequestPolicyQueryStringsConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginRequestPolicyQueryStringsConfigFilterSensitiveLog = OriginRequestPolicyQueryStringsConfigFilterSensitiveLog;
const OriginRequestPolicyConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginRequestPolicyConfigFilterSensitiveLog = OriginRequestPolicyConfigFilterSensitiveLog;
const CreateOriginRequestPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateOriginRequestPolicyRequestFilterSensitiveLog = CreateOriginRequestPolicyRequestFilterSensitiveLog;
const OriginRequestPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OriginRequestPolicyFilterSensitiveLog = OriginRequestPolicyFilterSensitiveLog;
const CreateOriginRequestPolicyResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateOriginRequestPolicyResultFilterSensitiveLog = CreateOriginRequestPolicyResultFilterSensitiveLog;
const PublicKeyConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PublicKeyConfigFilterSensitiveLog = PublicKeyConfigFilterSensitiveLog;
const CreatePublicKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePublicKeyRequestFilterSensitiveLog = CreatePublicKeyRequestFilterSensitiveLog;
const PublicKeyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PublicKeyFilterSensitiveLog = PublicKeyFilterSensitiveLog;
const CreatePublicKeyResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePublicKeyResultFilterSensitiveLog = CreatePublicKeyResultFilterSensitiveLog;
const KinesisStreamConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KinesisStreamConfigFilterSensitiveLog = KinesisStreamConfigFilterSensitiveLog;
const EndPointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndPointFilterSensitiveLog = EndPointFilterSensitiveLog;
const CreateRealtimeLogConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRealtimeLogConfigRequestFilterSensitiveLog = CreateRealtimeLogConfigRequestFilterSensitiveLog;
const RealtimeLogConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RealtimeLogConfigFilterSensitiveLog = RealtimeLogConfigFilterSensitiveLog;
const CreateRealtimeLogConfigResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRealtimeLogConfigResultFilterSensitiveLog = CreateRealtimeLogConfigResultFilterSensitiveLog;
const ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog = ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog;
const ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog = ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog;
const ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog = ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog;
const ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog = ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog;
const ResponseHeadersPolicyCorsConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyCorsConfigFilterSensitiveLog = ResponseHeadersPolicyCorsConfigFilterSensitiveLog;
const ResponseHeadersPolicyCustomHeaderFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyCustomHeaderFilterSensitiveLog = ResponseHeadersPolicyCustomHeaderFilterSensitiveLog;
const ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog = ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog;
const ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog = ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog;
const ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog = ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog;
const ResponseHeadersPolicyFrameOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyFrameOptionsFilterSensitiveLog = ResponseHeadersPolicyFrameOptionsFilterSensitiveLog;
const ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog = ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog;
const ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog = ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog;
const ResponseHeadersPolicyXSSProtectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyXSSProtectionFilterSensitiveLog = ResponseHeadersPolicyXSSProtectionFilterSensitiveLog;
const ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog = ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog;
const ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog = ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog;
const ResponseHeadersPolicyConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyConfigFilterSensitiveLog = ResponseHeadersPolicyConfigFilterSensitiveLog;
const CreateResponseHeadersPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateResponseHeadersPolicyRequestFilterSensitiveLog = CreateResponseHeadersPolicyRequestFilterSensitiveLog;
const ResponseHeadersPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResponseHeadersPolicyFilterSensitiveLog = ResponseHeadersPolicyFilterSensitiveLog;
const CreateResponseHeadersPolicyResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateResponseHeadersPolicyResultFilterSensitiveLog = CreateResponseHeadersPolicyResultFilterSensitiveLog;
const StreamingLoggingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StreamingLoggingConfigFilterSensitiveLog = StreamingLoggingConfigFilterSensitiveLog;
